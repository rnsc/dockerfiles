name: Build

on:
  push:
    branches: ['*']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build dockerfile (with push)
        shell: bash
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          set -ex
          for filepath in systemd/*/*.Dockerfile;
          do
            # FIX FOR BUILD ISSUES
            # https://github.com/docker/buildx/issues/495#issuecomment-761562905
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker buildx create --name multiarch --driver docker-container --use
            docker buildx inspect --bootstrap
            # END OF FIX
            
            dir=${filepath%/*}; file=${filepath##*/}; version=${file%.*}; flavor=${dir##*/};
            echo "Starting build for ${filepath} ${version} ${flavor}\n";
            
            PLATFORMS="linux/amd64,linux/arm64,linux/arm/v7"
            if [ "${flavor}" = "debian" ] && [ "${version}" = "8" ]; then PLATFORMS="linux/amd64"; fi
            if [ "${flavor}" = "debian" ] && [ "${version}" = "11" ]; then PLATFORMS="linux/amd64,linux/arm/v7"; fi
            if [ "${flavor}" = "centos" ] && [ "${version}" = "8" ]; then PLATFORMS="linux/amd64,linux/arm64"; fi
            
            docker buildx build \
            --platform="${PLATFORMS}" \
            --output "type=image,push=true" \
            --file "${filepath}" . \
            --tag "${DOCKER_HUB_USERNAME}/systemd-${flavor}:${version}"
            
            docker buildx rm multiarch
          done
